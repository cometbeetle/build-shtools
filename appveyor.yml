# Config was originally based on an example by Olivier Grisel. Thanks!
# https://github.com/ogrisel/python-appveyor-demo/blob/master/appveyor.yml

# There are several possible build configurations:
#
# 1. LAPACK
#   a) Intel MKL (https://software.intel.com/en-us/mkl) or
#   b) LAPACK for Windows (https://icl.cs.utk.edu/lapack-for-windows/lapack/)
# 2. FFTW
#   a) pyFFTW python package (https://pypi.org/project/pyFFTW/) or
#   b) FFTW binary library (ftp://ftp.fftw.org/pub/fftw)
# 3. NumPy
#   a) NumPy python package with generic LAPACK (https://pypi.org/project/numpy/) or
#   b) NumPy+MKL unofficial build (https://www.lfd.uci.edu/~gohlke/pythonlibs/)
#
# Here we use most generic build with LAPACK b), FFTW binary libray b) and
# generic NumPy b)

clone_depth: 100
max_jobs: 100

branches:
  only:
    - testing-windows

cache:
  - '%LOCALAPPDATA%\pip\Cache'

platform:
  - x64

image:
  - Visual Studio 2015

environment:
  global:
    NUMPY_BUILD_DEP: numpy
    CYTHON_BUILD_DEP: Cython
    APPVEYOR_SAVE_CACHE_ON_ERROR: true
    APPVEYOR_SKIP_FINALIZE_ON_EXIT: true
    BUILD_COMMIT: testing-windows

  matrix:
    - PYTHON: C:\Python39-x64
      PYTHON_VERSION: '3.9'
      PYTHON_ARCH: 64
      PYTHON_BUILD_DIR: build\lib.win-amd64-cpython-39

    - PYTHON: C:\Python310-x64
      PYTHON_VERSION: '3.10'
      PYTHON_ARCH: 64
      PYTHON_BUILD_DIR: build\lib.win-amd64-cpython-310

    - PYTHON: C:\Python311-x64
      PYTHON_VERSION: '3.11'
      PYTHON_ARCH: 64
      PYTHON_BUILD_DIR: build\lib.win-amd64-cpython-311

    - PYTHON: C:\Python312-x64
      PYTHON_VERSION: '3.12'
      PYTHON_ARCH: 64
      PYTHON_BUILD_DIR: build\lib.win-amd64-cpython-312

init:
  - "ECHO %PYTHON% %PYTHON_VERSION% %PYTHON_ARCH%"
  - "ECHO \"%APPVEYOR_SCHEDULED_BUILD%\""
  # If there is a newer build queued for the same PR, cancel this one.
  # The AppVeyor 'rollout builds' option is supposed to serve the same
  # purpose but it is problematic because it tends to cancel builds pushed
  # directly to master instead of just PR builds (or the converse).
  # credits: JuliaLang developers.
  - ps: if ($env:APPVEYOR_PULL_REQUEST_NUMBER -and $env:APPVEYOR_BUILD_NUMBER -ne ((Invoke-RestMethod `
        https://ci.appveyor.com/api/projects/$env:APPVEYOR_ACCOUNT_NAME/$env:APPVEYOR_PROJECT_SLUG/history?recordsNumber=50).builds | `
        Where-Object pullRequestId -eq $env:APPVEYOR_PULL_REQUEST_NUMBER)[0].buildNumber) { `
          Write-Host "There are newer queued builds for this pull request, skipping build."
          Exit-AppveyorBuild
        }

install:

  # Install MSYS2
  - ps: Invoke-WebRequest -URI https://repo.msys2.org/distrib/msys2-x86_64-latest.exe
  - ps: .\msys2-x86_64-latest.exe in --confirm-command --accept-messages --root C:\msys64
  - ps: C:\msys64\ucrt64.exe "pacman install -S mingw-w64-ucrt-x86_64-gcc-fortran mingw-w64-ucrt-x86_64-openblas mingw-w64-ucrt-x86_64-cmake mingw-w64-ucrt-x86_64-fftw --noconfirm"
  
  # Get needed submodules
  # - git submodule update --remote  # versioneer does not work with submodules
  - git clone https://github.com/cometbeetle/SHTOOLS.git
  - git clone https://github.com/multi-build/multibuild.git

  # Install new Python if necessary
  - ps: .\multibuild\install_python.ps1

  # Prepend newly installed Python to the PATH of this build (this cannot be
  # done from inside the powershell script as it would require to restart
  # the parent CMD process).
  - set PATH=%PYTHON%;%PYTHON%\Scripts;%PATH%

  # Check that we have the expected version and architecture for Python
  - python --version
  - >-
     python -c "import sys,platform,struct;
     print(sys.platform, platform.machine(), struct.calcsize('P') * 8, )"

  # Install build requirements
  - python -m pip install -U pip build delvewheel

build_script:
  - ps: $env:Path += ";C:\msys64\ucrt64\bin"
  
  - cd %APPVEYOR_BUILD_FOLDER%\SHTOOLS

  # Build wheel
  - python -m build
  - dir dist

on_success:
  - pip install twine
  #- twine upload --username wieczor --password %PYPI_PASSWORD% --skip-existing dist/*
  - twine upload --repository-url https://test.pypi.org/legacy/ --username __token__ --password %PYPITEST_PASSWORD% --skip-existing dist/*

artifacts:
  - path: SHTOOLS\dist\pyshtools-*.whl
